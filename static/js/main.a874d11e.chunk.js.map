{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/SearchMovieInput/SearchMovieInput.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","imdbUrl","imgUrl","description","title","className","src","alt","href","MoviesList","movies","searchParam","filteredMovies","filter","searchString","toLowerCase","movieTitle","movieDescription","includes","map","imdbId","SearchMovieInput","onChange","htmlFor","type","id","placeholder","e","target","value","App","state","query","onQueryChange","setState","this","moviesFromServer","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oTAOaA,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAEzCC,EACED,EADFC,QAASC,EACPF,EADOE,OAAQC,EACfH,EADeG,YAAaC,EAC5BJ,EAD4BI,MAGhC,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKJ,EACLK,IAAI,kBAIV,sBAAKF,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJC,IAAI,aAIV,qBAAKF,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,SAI/B,sBAAKC,UAAU,UAAf,UACGF,EACD,uBACA,mBAAGK,KAAMP,EAAT,4BC/BGQ,EAA8B,SAAC,GAGrC,IAFLC,EAEI,EAFJA,OAEI,IADJC,mBACI,MADU,GACV,EACEC,EAAiBF,EAAOG,QAAO,SAAAb,GACnC,IAAMc,EAAeH,EAAYI,cAC3BC,EAAahB,EAAMI,MAAMW,cACzBE,EAAmBjB,EAAMG,YAAYY,cAE3C,OAAOC,EAAWE,SAASJ,IACtBG,EAAiBC,SAASJ,MAGjC,OACE,qBAAKT,UAAU,SAAf,SACGO,EAAeO,KAAI,SAAAnB,GAAK,OACvB,cAAC,EAAD,CAA8BA,MAAOA,GAArBA,EAAMoB,c,OCnBjBC,EAAoC,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAC/C,qBAAKjB,UAAU,MAAf,SACE,qBAAKA,UAAU,QAAf,SACE,wBAAOkB,QAAQ,eAAelB,UAAU,QAAxC,yBAGE,qBAAKA,UAAU,UAAf,SACE,uBACEmB,KAAK,OACLC,GAAG,eACHpB,UAAU,QACVqB,YAAY,mBACZJ,SAAU,SAACK,GAAD,OAAOL,EAASK,EAAEC,OAAOC,oBCRlCC,EAAb,4MACEC,MAAe,CACbC,MAAO,IAFX,EAKEC,cAAgB,SAACJ,GACf,EAAKK,SAAS,CAAEF,MAAOH,KAN3B,4CASE,WACE,IAAQG,EAAUG,KAAKJ,MAAfC,MAER,OACE,sBAAK3B,UAAU,OAAf,UACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CAAkBiB,SAAUa,KAAKF,gBAEjC,cAAC,EAAD,CAAYtB,YAAaqB,EAAOtB,OAAQ0B,OAE1C,qBAAK/B,UAAU,UAAf,sCAnBR,GAAyBgC,IAAMC,WCN/BC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.a874d11e.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ninterface Props {\n  movie: Movie;\n}\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  const {\n    imdbUrl, imgUrl, description, title,\n  } = movie;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {description}\n          <br />\n          <a href={imdbUrl}>IMDB</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import './MoviesList.scss';\nimport React from 'react';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n  searchParam: string;\n}\n\nexport const MoviesList: React.FC<Props> = ({\n  movies,\n  searchParam = '',\n}) => {\n  const filteredMovies = movies.filter(movie => {\n    const searchString = searchParam.toLowerCase();\n    const movieTitle = movie.title.toLowerCase();\n    const movieDescription = movie.description.toLowerCase();\n\n    return movieTitle.includes(searchString)\n      || movieDescription.includes(searchString);\n  });\n\n  return (\n    <div className=\"movies\">\n      {filteredMovies.map(movie => (\n        <MovieCard key={movie.imdbId} movie={movie} />\n      ))}\n    </div>\n  );\n};\n","import React from 'react';\n\ninterface Props {\n  onChange: (value: string) => void;\n}\n\nexport const SearchMovieInput: React.FC<Props> = ({ onChange }) => (\n  <div className=\"box\">\n    <div className=\"field\">\n      <label htmlFor=\"search-query\" className=\"label\">\n        Search movie\n\n        <div className=\"control\">\n          <input\n            type=\"text\"\n            id=\"search-query\"\n            className=\"input\"\n            placeholder=\"Type search word\"\n            onChange={(e) => onChange(e.target.value)}\n          />\n        </div>\n      </label>\n    </div>\n  </div>\n);\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport moviesFromServer from './api/movies.json';\nimport { SearchMovieInput } from './components/SearchMovieInput';\n\ntype State = {\n  query: string;\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    query: '',\n  };\n\n  onQueryChange = (value: string): void => {\n    this.setState({ query: value });\n  };\n\n  render() {\n    const { query } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <SearchMovieInput onChange={this.onQueryChange} />\n\n          <MoviesList searchParam={query} movies={moviesFromServer} />\n        </div>\n        <div className=\"sidebar\">\n          Sidebar goes here\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}